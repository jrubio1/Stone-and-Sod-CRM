## Session Summary: Decoupling Authentication (August 1, 2025)

**Goal:** Decouple frontend (Next.js) and backend (new Express.js API) authentication to resolve persistent NextAuth.js and Docker-related issues, and implement client-side route protection.

**Key Changes & Learnings:**

*   **Backend API (Express.js + JWT):**
    *   Created a new `backend/` service with Express.js, `jsonwebtoken`, `bcrypt`, `cors`, and `dotenv`.
    *   Configured `backend/tsconfig.json` and `backend/package.json` for TypeScript development and `npm start` script.
    *   Added `backend` service to `docker-compose.yml` (port 5001, depends on `db`).
    *   **Watch out for:** Port conflicts (resolved by changing backend port to 5001).

*   **Frontend (Next.js):**
    *   **Removed NextAuth.js:** Uninstalled `next-auth` from `app/package.json` and removed all related imports and logic from `app/src/app/providers.tsx`, `app/src/app/layout.tsx`, and `app/src/app/api/auth/[...nextauth]/route.ts`.
    *   **Removed Next.js Middleware:** `app/middleware.ts` was removed as it was not being picked up correctly and is no longer needed with client-side protection.
    *   **Client-Side Route Protection:** Implemented `useEffect` in `app/src/app/customer/page.tsx` to check for an `auth_token` cookie and redirect to `/login` if not present.
    *   **Updated Login/Logout:** Modified `app/src/app/login/page.tsx` to set a dummy `auth_token` cookie on login and `app/components/LogoutButton.tsx` to clear it on logout. Installed `js-cookie`.
    *   **Fixed `react-icons`:** Resolved `Module not found` error by adjusting `app/tsconfig.json` paths to include the root `app` directory (`./*`) for component imports.
    *   **Fixed Logout Button Visibility:** Ensured `LogoutButton` is hidden on the login page by checking `router.pathname` in `app/src/components/layout/Header.tsx`.
    *   **Watch out for:** Next.js caching issues in Docker (resolved by aggressive pruning and `docker-compose build --no-cache`).

**Current Status:**
*   Backend, frontend, and database containers are running.
*   Frontend dashboard is visible.
*   `/customer` page is protected by client-side logic.
*   Login and logout functionality (dummy) is working.
*   Logout button visibility is correct.

**Next Steps (for future LLM):**
*   Implement actual authentication in the backend (login endpoint, JWT generation/validation).
*   Integrate frontend login/logout with the new backend API.
*   Implement protected API routes in the backend.
*   Replace placeholder user data in frontend with data from the backend.