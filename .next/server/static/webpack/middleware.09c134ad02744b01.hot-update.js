"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/**\n * @file middleware.ts\n * @description This file defines the Next.js middleware for handling authentication and authorization.\n *              Middleware functions run before a request is completed, allowing for logic like\n *              redirecting users based on their authentication status or roles.\n */  // Import NextResponse for redirecting and rewriting responses.\n/**\n * The main middleware function that executes for configured routes.\n * @param {NextRequest} request - The incoming request object.\n * @returns {NextResponse} A response object, either redirecting or allowing the request to proceed.\n */ function middleware(request) {\n    // Attempt to get the authentication token from the request cookies.\n    const token = request.cookies.get(\"token\")?.value;\n    // Extract the pathname from the request URL.\n    const { pathname } = request.nextUrl;\n    // Define an array of routes that require authentication (protected routes).\n    const protectedRoutes = [\n        \"/dashboard\"\n    ]; // Add other protected routes here as needed.\n    // Logic to redirect to the login page if a user tries to access a protected route without a token.\n    if (protectedRoutes.includes(pathname) && !token) {\n        // If the route is protected and no token is found, redirect to the /login page.\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/login\", request.url));\n    }\n    // Logic to redirect authenticated users away from login/register pages.\n    // If a user is already authenticated (has a token) and tries to access /login or /register,\n    // redirect them to the /dashboard.\n    if ((pathname === \"/login\" || pathname === \"/register\") && token) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/dashboard\", request.url));\n    }\n    // If none of the above conditions are met, allow the request to proceed to its destination.\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\n/**\n * Configuration object for the middleware.\n * The `matcher` property specifies the paths for which this middleware will be executed.\n * It uses a regex-like syntax to match routes.\n */ const config = {\n    matcher: [\n        \"/dashboard\",\n        \"/login\",\n        \"/register\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUUwQyxDQUFDLCtEQUErRDtBQUkzRzs7OztDQUlDLEdBQ00sU0FBU0MsV0FBV0MsT0FBb0I7SUFDN0Msb0VBQW9FO0lBQ3BFLE1BQU1DLFFBQVFELFFBQVFFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVVDO0lBQzVDLDZDQUE2QztJQUM3QyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHTCxRQUFRTSxPQUFPO0lBRXBDLDRFQUE0RTtJQUM1RSxNQUFNQyxrQkFBa0I7UUFBQztLQUFhLEVBQUUsNkNBQTZDO0lBRXJGLG1HQUFtRztJQUNuRyxJQUFJQSxnQkFBZ0JDLFFBQVEsQ0FBQ0gsYUFBYSxDQUFDSixPQUFPO1FBQ2hELGdGQUFnRjtRQUNoRixPQUFPSCxxREFBWUEsQ0FBQ1csUUFBUSxDQUFDLElBQUlDLElBQUksVUFBVVYsUUFBUVcsR0FBRztJQUM1RDtJQUVBLHdFQUF3RTtJQUN4RSw0RkFBNEY7SUFDNUYsbUNBQW1DO0lBQ25DLElBQUksQ0FBQ04sYUFBYSxZQUFZQSxhQUFhLFdBQVUsS0FBTUosT0FBTztRQUNoRSxPQUFPSCxxREFBWUEsQ0FBQ1csUUFBUSxDQUFDLElBQUlDLElBQUksY0FBY1YsUUFBUVcsR0FBRztJQUNoRTtJQUVBLDRGQUE0RjtJQUM1RixPQUFPYixxREFBWUEsQ0FBQ2MsSUFBSTtBQUMxQjtBQUVBOzs7O0NBSUMsR0FDTSxNQUFNQyxTQUFTO0lBQ3BCQyxTQUFTO1FBQUM7UUFBYztRQUFVO0tBQVk7QUFDaEQsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9taWRkbGV3YXJlLnRzPzQyMmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBtaWRkbGV3YXJlLnRzXG4gKiBAZGVzY3JpcHRpb24gVGhpcyBmaWxlIGRlZmluZXMgdGhlIE5leHQuanMgbWlkZGxld2FyZSBmb3IgaGFuZGxpbmcgYXV0aGVudGljYXRpb24gYW5kIGF1dGhvcml6YXRpb24uXG4gKiAgICAgICAgICAgICAgTWlkZGxld2FyZSBmdW5jdGlvbnMgcnVuIGJlZm9yZSBhIHJlcXVlc3QgaXMgY29tcGxldGVkLCBhbGxvd2luZyBmb3IgbG9naWMgbGlrZVxuICogICAgICAgICAgICAgIHJlZGlyZWN0aW5nIHVzZXJzIGJhc2VkIG9uIHRoZWlyIGF1dGhlbnRpY2F0aW9uIHN0YXR1cyBvciByb2xlcy5cbiAqL1xuXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7IC8vIEltcG9ydCBOZXh0UmVzcG9uc2UgZm9yIHJlZGlyZWN0aW5nIGFuZCByZXdyaXRpbmcgcmVzcG9uc2VzLlxuaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJzsgLy8gSW1wb3J0IE5leHRSZXF1ZXN0IGZvciB0eXBlLWNoZWNraW5nIHRoZSByZXF1ZXN0IG9iamVjdC5cbmltcG9ydCB7IGdldEF1dGhUb2tlbiB9IGZyb20gJ0AvbGliL2F1dGgnOyAvLyBVdGlsaXR5IGZ1bmN0aW9uIHRvIHJldHJpZXZlIHRoZSBhdXRoZW50aWNhdGlvbiB0b2tlbiBmcm9tIGNvb2tpZXMuXG5cbi8qKlxuICogVGhlIG1haW4gbWlkZGxld2FyZSBmdW5jdGlvbiB0aGF0IGV4ZWN1dGVzIGZvciBjb25maWd1cmVkIHJvdXRlcy5cbiAqIEBwYXJhbSB7TmV4dFJlcXVlc3R9IHJlcXVlc3QgLSBUaGUgaW5jb21pbmcgcmVxdWVzdCBvYmplY3QuXG4gKiBAcmV0dXJucyB7TmV4dFJlc3BvbnNlfSBBIHJlc3BvbnNlIG9iamVjdCwgZWl0aGVyIHJlZGlyZWN0aW5nIG9yIGFsbG93aW5nIHRoZSByZXF1ZXN0IHRvIHByb2NlZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIC8vIEF0dGVtcHQgdG8gZ2V0IHRoZSBhdXRoZW50aWNhdGlvbiB0b2tlbiBmcm9tIHRoZSByZXF1ZXN0IGNvb2tpZXMuXG4gIGNvbnN0IHRva2VuID0gcmVxdWVzdC5jb29raWVzLmdldCgndG9rZW4nKT8udmFsdWU7XG4gIC8vIEV4dHJhY3QgdGhlIHBhdGhuYW1lIGZyb20gdGhlIHJlcXVlc3QgVVJMLlxuICBjb25zdCB7IHBhdGhuYW1lIH0gPSByZXF1ZXN0Lm5leHRVcmw7XG5cbiAgLy8gRGVmaW5lIGFuIGFycmF5IG9mIHJvdXRlcyB0aGF0IHJlcXVpcmUgYXV0aGVudGljYXRpb24gKHByb3RlY3RlZCByb3V0ZXMpLlxuICBjb25zdCBwcm90ZWN0ZWRSb3V0ZXMgPSBbJy9kYXNoYm9hcmQnXTsgLy8gQWRkIG90aGVyIHByb3RlY3RlZCByb3V0ZXMgaGVyZSBhcyBuZWVkZWQuXG5cbiAgLy8gTG9naWMgdG8gcmVkaXJlY3QgdG8gdGhlIGxvZ2luIHBhZ2UgaWYgYSB1c2VyIHRyaWVzIHRvIGFjY2VzcyBhIHByb3RlY3RlZCByb3V0ZSB3aXRob3V0IGEgdG9rZW4uXG4gIGlmIChwcm90ZWN0ZWRSb3V0ZXMuaW5jbHVkZXMocGF0aG5hbWUpICYmICF0b2tlbikge1xuICAgIC8vIElmIHRoZSByb3V0ZSBpcyBwcm90ZWN0ZWQgYW5kIG5vIHRva2VuIGlzIGZvdW5kLCByZWRpcmVjdCB0byB0aGUgL2xvZ2luIHBhZ2UuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbG9naW4nLCByZXF1ZXN0LnVybCkpO1xuICB9XG5cbiAgLy8gTG9naWMgdG8gcmVkaXJlY3QgYXV0aGVudGljYXRlZCB1c2VycyBhd2F5IGZyb20gbG9naW4vcmVnaXN0ZXIgcGFnZXMuXG4gIC8vIElmIGEgdXNlciBpcyBhbHJlYWR5IGF1dGhlbnRpY2F0ZWQgKGhhcyBhIHRva2VuKSBhbmQgdHJpZXMgdG8gYWNjZXNzIC9sb2dpbiBvciAvcmVnaXN0ZXIsXG4gIC8vIHJlZGlyZWN0IHRoZW0gdG8gdGhlIC9kYXNoYm9hcmQuXG4gIGlmICgocGF0aG5hbWUgPT09ICcvbG9naW4nIHx8IHBhdGhuYW1lID09PSAnL3JlZ2lzdGVyJykgJiYgdG9rZW4pIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9kYXNoYm9hcmQnLCByZXF1ZXN0LnVybCkpO1xuICB9XG5cbiAgLy8gSWYgbm9uZSBvZiB0aGUgYWJvdmUgY29uZGl0aW9ucyBhcmUgbWV0LCBhbGxvdyB0aGUgcmVxdWVzdCB0byBwcm9jZWVkIHRvIGl0cyBkZXN0aW5hdGlvbi5cbiAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XG59XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvYmplY3QgZm9yIHRoZSBtaWRkbGV3YXJlLlxuICogVGhlIGBtYXRjaGVyYCBwcm9wZXJ0eSBzcGVjaWZpZXMgdGhlIHBhdGhzIGZvciB3aGljaCB0aGlzIG1pZGRsZXdhcmUgd2lsbCBiZSBleGVjdXRlZC5cbiAqIEl0IHVzZXMgYSByZWdleC1saWtlIHN5bnRheCB0byBtYXRjaCByb3V0ZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIG1hdGNoZXI6IFsnL2Rhc2hib2FyZCcsICcvbG9naW4nLCAnL3JlZ2lzdGVyJ10sIC8vIEFwcGx5IG1pZGRsZXdhcmUgdG8gL2Rhc2hib2FyZCwgL2xvZ2luLCBhbmQgL3JlZ2lzdGVyIHBhdGhzLlxufTsiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJ0b2tlbiIsImNvb2tpZXMiLCJnZXQiLCJ2YWx1ZSIsInBhdGhuYW1lIiwibmV4dFVybCIsInByb3RlY3RlZFJvdXRlcyIsImluY2x1ZGVzIiwicmVkaXJlY3QiLCJVUkwiLCJ1cmwiLCJuZXh0IiwiY29uZmlnIiwibWF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});